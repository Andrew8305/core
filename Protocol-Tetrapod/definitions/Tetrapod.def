java package io.tetrapod.protocol.core
java outdir "../src"
javascript out "../../Tetrapod-Tetrapod/webContent/protocol/tetrapod.js"
#javascript out "../rsc/protocol/tetrapod.js"

// The core tetrapod service
service Tetrapod @version(1) @id(1)

error HOSTNAME_MISMATCH
error INVALID_CREDENTIALS
error INVALID_UUID
error ITEM_OWNED

const int  MAX_PARENTS       = 0x000007FF     // Supports up to 2047 tetrapods
const int  MAX_ID            = 0x000FFFFF     // Supports up to 1048575 entities per tetrapod
const int  PARENT_ID_SHIFT   = 20             // bits to shift to get parentId
const int  PARENT_ID_MASK    = 0x7FF00000     // mask to get parentId

################################# STRUCTURES #################################

public struct Entity
   1: int entityId  
   2: int parentId  
   3: long reclaimToken  
   4: string host
   5: int status
   6: byte type
   7: string name
   8: int build  
   9: int version
  10: int contractId  
  
################################# REQUESTS #################################

public request Register
   1: int build
   2: string token
   3: int contractId
   4: string name
   5: int status
   6: string host

public response Register 
   1: int entityId
   2: int parentId
   3: string token

internal request ClusterJoin
   1: int build
   2: int status
   3: string host
   4: int entityId
   5: int servicePort
   6: int clusterPort
    

internal request Unregister
   1: int entityId
    
internal request ServicesSubscribe
   1: string adminToken
   
internal request ServicesUnsubscribe

internal request ServiceStatusUpdate
   1: int status

# perhaps this should be merged into a new RegisterService   
internal request AddServiceInformation
   1: ContractDescription info
   
internal request LogRegistryStats 

public request AdminLogin
   1: string email @sensitive
   2: string password @sensitive
   
   error INVALID_ACCOUNT         

public response AdminLogin
   1: string token @sensitive
   2: int accountId
   
public request AdminAuthorize
   1: string token @sensitive
   
public response AdminAuthorize
   1: int accountId
   2: string email
   
// get a short-lived session token with rights encoded    
admin request AdminSessionToken
   1: int accountId
   2: string authToken @sensitive  // a valid login token
   
admin response AdminSessionToken    
   1: string sessionToken @sensitive // a short lived session token
   
internal request AdminCreate
   1: string token @sensitive
   2: string email @sensitive
   3: string password @sensitive
   4: long rights
   
internal request AdminDelete
   1: string token @sensitive
   2: int accountId
   
internal request AdminChangePassword
   1: string token @sensitive
   2: string oldPassword @sensitive
   3: string newPassword @sensitive
   
internal request AdminResetPassword
   1: string token @sensitive
   2: int accountId
   3: string password @sensitive 
   
internal request AdminChangeRights
   1: string token @sensitive
   2: int accountId
   3: long rights 
   
public struct Admin
   1: int accountId
   2: string email @sensitive
   3: string hash @sensitive
   4: long rights      
   5: long[] loginAttempts 

   const int MAX_LOGIN_ATTEMPTS    = 5
   
   const int RIGHTS_CLUSTER_READ   = 1
   const int RIGHTS_CLUSTER_WRITE  = 2
   const int RIGHTS_USER_READ      = 4
   const int RIGHTS_USER_WRITE     = 8
   const int RIGHTS_RESERVED_1     = 16
   const int RIGHTS_RESERVED_2     = 32
   const int RIGHTS_RESERVED_3     = 64
   const int RIGHTS_RESERVED_4     = 128   
   const int RIGHTS_APP_SET_1      = 256  
   const int RIGHTS_APP_SET_2      = 512
   const int RIGHTS_APP_SET_3      = 1024
   const int RIGHTS_APP_SET_4      = 2048

public request KeepAlive

internal request SetAlternateId
   1: int entityId
   2: int alternateId
   
public request SetEntityReferrer
   1: string referrer

internal request GetEntityInfo
   1: int entityId

   error UNKNOWN_ENTITY_ID

internal response GetEntityInfo
   1: int build   
   2: string name     // entity name
   3: string host     // host/ip of the entity
   4: string referrer // referrer of first request (clients only)
   5: string domain   // domain request was sent to (clients only)

################################# MESSAGES #################################

// a special message to avoid race conditions on the Register response
public message Entity 
   1: int entityId
  
##### Registry Topic Messages #####  

internal message Registry.TopicPublished
   1: int topicId

internal message Registry.TopicUnpublished
   1: int topicId

internal message Registry.TopicSubscribed
   1: int topicId
   2: int entityId
   3: boolean once

internal message Registry.TopicUnsubscribed
   1: int topicId
   2: int entityId
   
##### Building #############

admin request GetServiceBuildInfo
   1: int accountId
   2: string authToken @sensitive
   
admin response  GetServiceBuildInfo
   1: BuildInfo<list> services
   
// An error in any one of the build commands stops processing the remaining ones
admin request ExecuteBuildCommand
   1: int accountId
   2: string authToken @sensitive
   3: BuildCommand<list> commands

// Sent every 10s or so for display in the UI while it's running
admin message BuildCommandProgress
   1: string output
   2: boolean isDone

admin struct BuildInfo
   1: string serviceName
   2: boolean canBuild
   3: boolean canDeploy
   4: boolean canLaunch
   5: int currentBuild
   6: int[] knownBuilds

admin struct BuildCommand
   1: string serviceName
   2: int build
   3: int command
   4: string name 
   
   const int BUILD   = 1
   const int DEPLOY  = 2
   const int LAUNCH  = 3
   const int FULL_CYCLE = 4
   const int LAUNCH_PAUSED  = 5
   
   const int DEPLOY_LATEST   = -1
   const int LAUNCH_DEPLOYED = -1

##### Services Topic Messages ##### 

internal message Services.ServiceAdded
	1: Entity entity 
	 
internal message Services.ServiceRemoved
	1: int entityId
	
internal message Services.ServiceUpdated
	1: int entityId
	2: int status
	
## 3rd party auth add-ons

internal request VerifyEntityToken
   1: int entityId
   2: string token
     

internal request RaftStats
internal response RaftStats 
   1: byte role
   2: long curTerm
   3: long lastTerm
   4: long lastIndex
   5: long commitIndex
   6: int leaderId
   7: int[] peers
      
## Cluster Messages

internal request AdminSubscribe
   1: string adminToken @sensitive
   
internal struct ClusterProperty
   1: string key
   2: boolean secret
   3: string val @sensitive

internal message  Cluster.ClusterPropertyAdded        
   1: ClusterProperty property

internal message Cluster.ClusterPropertyRemoved        
   1: string key
   
internal message Cluster.ClusterSynced         
   
internal request SetClusterProperty
   1: string adminToken @sensitive
   2: ClusterProperty property

internal request DelClusterProperty
   1: string adminToken @sensitive
   2: string key
   
      
// notification of an existing tetrapod cluster member    
internal message Cluster.ClusterMember
   1: int entityId
   2: string host
   3: int servicePort
   4: int clusterPort
   5: string uuid

# defines an archive or location to be served as a a web root    
internal struct WebRootDef
   1: string name // semantic name/key of the web root
   2: string path // resource root path name 
   3: string file // location of static files to serve

internal message WebRootAdded  
   1: WebRootDef def
   
internal message WebRootRemoved       
   1: string name
    
internal request SetWebRoot
   1: string adminToken @sensitive
   2: WebRootDef def
   
internal request DelWebRoot
   1: string adminToken @sensitive
   2: string name
                
internal message AdminUserAdded  
   1: Admin admin
   
internal message AdminUserRemoved       
   1: int accountId   
    
internal request Lock
   1: string key
   2: string uuid
   3: int leaseMillis

internal response Lock
   1: string uuid
   
internal request Unlock
   1: string key
   2: string uuid
   
internal request Snapshot
   1: string adminToken @sensitive 
   
########### OWNERSHIP SERVICES ###########    

internal struct Owner
   1: int entityId
   2: long expiry
   3: string<list> keys
   4: string prefix

internal request ClaimOwnership
   1: string prefix
   2: string key
   3: int leaseMillis
   
internal response ClaimOwnership   
   1: int entityId
   2: long expiry

internal request RetainOwnership
   1: int leaseMillis
   2: string prefix
   
internal request ReleaseOwnership
   1: string prefix
   2: string[] keys // pass null for ALL   
   
internal request SubscribeOwnership
   1: string prefix // subscribes to keys starting with this prefix   
   
internal request UnsubscribeOwnership
   1: string prefix // unsubscribes to keys starting with this prefix   
   
internal message Ownership.ClaimOwnership
   1: int entityId   
   2: long expiry
   3: string key
       
internal message Ownership.RetainOwnership
   1: int entityId
   2: string prefix
   3: long expiry 
    
internal message Ownership.ReleaseOwnership
   1: int entityId
   2: string prefix
   3: string[] keys
   
##########################################          
 
internal request TetrapodClientSessions

internal response TetrapodClientSessions  
   1: int[] clientSessions   
