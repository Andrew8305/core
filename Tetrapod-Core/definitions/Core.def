java package io.tetrapod.protocol.core
java outdir src

// The core tetrapod service
service Tetrapod version 1 [1]

struct Core
   const int   UNADDRESSED    = 0 // request is not addressed to a specific entity 
   
   const byte  TYPE_TETRAPOD  = 1
   const byte  TYPE_SERVICE   = 2
   const byte  TYPE_ADMIN     = 3
   const byte  TYPE_CLIENT    = 4
   const byte  TYPE_ANONYMOUS = 5
    
   const int   STATUS_INIT       = 1  # bitmask
   const int   STATUS_PAUSED     = 2
   const int   STATUS_GONE       = 4
   const int   STATUS_BUSY       = 8
   const int   STATUS_OVERLOADED = 16
   
   # assigning values to errors should only be done for core errors
   error UNKNOWN              = 1 // catch all error
   error SERVICE_UNAVAILABLE  = 2 // No service exists to which to relay the request
   error TIMEOUT              = 3 // Request timed out without returning a response
   error SERIALIZATION        = 4 // Unable to deserialize the request
   error PROTOCOL_MISMATCH    = 5 // Protocol versions are not compatible
   error UNKNOWN_REQUEST      = 6 // Service exists and received request, but doen't know how to handle it

public struct Entity
   1: int entityId  
   2: int parentId  
   3: long reclaimToken  
   4: string host
   5: int status
   6: byte type
   7: string name
   8: int build  
   9: int version  
   
public struct Handshake 
   1: int wireVersion  
   2: int wireOptions 

public struct RequestHeader
   1: int 	requestId 
   2: int 	fromId   
   3: int 	toId
   4: byte 	fromType
   5: byte 	timeout
   6: int 	version
   7: int 	structId
   8: int   contractId
   
public struct ResponseHeader
   1: int requestId 
   2: int structId
   
public request Register 
   1: int build   
   
public response Register 
   1: int entityId
   2: int parentId
   3: long reclaimToken
    
internal message ServiceInfo.ServiceAdded
    1: int contractId
    2: string name
 